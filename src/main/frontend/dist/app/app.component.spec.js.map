{"version":3,"file":"app.component.spec.js","sourceRoot":"","sources":["../Users/charlie/Employment/Mapp/mapp_challenge/spring-angular2-cli-starter/src/main/frontend/tmp/broccoli_type_script_compiler-input_base_path-SgMJAltK.tmp/0/src/app/app.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\n\nimport {\n    beforeEach, beforeEachProviders,\n\tdescribe, xdescribe,\n\texpect, it, xit,\n\tasync, inject\n\t} from '@angular/core/testing';\nimport { AppComponent } from './app.component';\nimport { Product } from './app.component';\nimport { Basket } from './app.component';\nimport { Deal } from './app.component';\n\nbeforeEachProviders(() => [AppComponent]);\n\ndescribe('App: Starter', () => {\n\tit('Should create the app',\n\t   inject([AppComponent], (app: AppComponent) => {\n\t\t   expect(app).toBeTruthy();\n\t       }));\n    });\n\n// Just buy a product, enough times to trigger both of its prices.\ndescribe('Total One Product', () => {\n\tlet basket = new Basket();\n\tlet product1 = new Product(\"testproduct1\", \"desc\", 3.00, [new Deal(3, 7.00)], \"product.jpg\", 10000);\n\tfor (var i = 0; i < 4; ++i) {\n\t    // buy 4 to trigger 1 deal and 1 regular price.\n\t    basket.buy(product1);\n\t}\n\tbasket.getTotal();\n\tit ('Basket should total to sum of all deal prices.', () => {\n\t\texpect(basket.total).toEqual(7.00 + 3.00);\n\t    });\n    });\n\n// Try buying two products, enough to trigger all possible prices once.\ndescribe('Total Two Products', () => {\n\tlet basket = new Basket();\n\tlet product1 = new Product(\"testproduct1\", \"desc\", 3.00, [new Deal(3, 7.00)], \"product.jpg\", 10000);\n\tlet product2 = new Product(\"testproduct1\", \"desc\", 5.00, [new Deal(2, 8.00), new Deal(5, 19.00)], \"product.jpg\", 10000);\n\tfor (var i = 0; i < 4; ++i) {\n\t    // Buy 4 to trigger 1 deal and 1 regular price.\n\t    basket.buy(product1);\n\t}\n\tfor (var i = 0; i < 8; ++i) {\n\t    // Buy 8 to trigger 1 of each price.\n\t    basket.buy(product2);\n\t}\n\tbasket.getTotal();\n\tit ('Basket should total to sum of all deal prices.', () => {\n\t\texpect(basket.total).toEqual(7.00 + 3.00 + 19.00 + 8.00 + 5.00);\n\t    });\n    });\n\n// Buy a product, then unbuy it, and make sure the basket is empty.\ndescribe('Buy, Unbuy, Empty', () => {\n\tlet basket = new Basket();\n\tlet product1 = new Product(\"testproduct1\", \"desc\", 3.00, [new Deal(3, 7.00)], \"product.jpg\", 10000);\n\tbasket.buy(product1);\n\tbasket.unbuy(product1);\n\tit ('Basket should be empty.', () => {\n\t\texpect(basket.purchases.length).toEqual(0);\n\t    });\n    });\n\n// Buy a product, then unbuy it, and make sure the total is 0.\ndescribe('Buy, Unbuy, Total is 0', () => {\n\tlet basket = new Basket();\n\tlet product1 = new Product(\"testproduct1\", \"desc\", 3.00, [new Deal(3, 7.00)], \"product.jpg\", 10000);\n\tbasket.buy(product1);\n\tbasket.unbuy(product1);\n\tbasket.getTotal();\n\tit ('Basket total should be 0.', () => {\n\t\texpect(basket.total).toEqual(0);\n\t    });\n    });\n\n// Buy a product, then unbuy another, and make sure the original product is still in the cart;\ndescribe('Buy, Unbuy Different, Total First', () => {\n\tlet basket = new Basket();\n\tlet product1 = new Product(\"testproduct1\", \"desc\", 3.00, [new Deal(3, 7.00)], \"product.jpg\", 10000);\n\tlet product2 = new Product(\"testproduct1\", \"desc\", 5.00, [new Deal(2, 8.00), new Deal(5, 19.00)], \"product.jpg\", 10000);\n\tbasket.buy(product1);\n\tbasket.unbuy(product2);\n\tbasket.getTotal();\n\tit (\"Basket total should be one of product1.\", () => {\n\t\texpect(basket.total).toEqual(3.00);\n\t    });\n    });\n\n// Start an app, assign a name to the current user.  Make sure there's one user and their name is as given.\ndescribe('Name Anonymous User', () => {\n\tlet app = new AppComponent();\n\tlet username: string = \"Bill Lee\";\n\tapp.switchTo(username);\n\tit(\"Should have one customer.\", () => {\n\t\texpect(app.customers.length == 1);\n\t    });\n\tit(\"Customer's name should be Bill Lee.\", () => {\n\t\texpect(app.customer.username == username);\n\t    });\n\n    });\n\n// Start an app, assign a name to the current user.  Create a new user.  See that there are two users and the current username is correct.\ndescribe('Name Anonymous User', () => {\n\tlet app = new AppComponent();\n\tlet username1: string = \"Bill Lee\";\n\tlet username2: string = \"Clark Nova\";\n\tapp.switchTo(username1);\n\tapp.switchTo(username2);\n\tit(\"Should have one customer.\", () => {\n\t\texpect(app.customers.length == 2);\n\t    });\n\tit(\"Current customer's name should be Clark Nova.\", () => {\n\t\texpect(app.customer.username == username2);\n\t    });\n\n    });\n\n"]}